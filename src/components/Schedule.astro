---
const schedule = {
  days: ['Lunes', 'Martes', 'MiÃ©rcoles', 'Jueves', 'Viernes'],
  times: [
    '10:00',
    '11:00',
    '12:00',
    '13:00',
    '17:00',
    '18:00',
    '19:00',
    '20:00',
    '21:00',
  ],
  classes: [
    { time: '10:00', activity: 'THAI' },
    { time: '11:00', activity: 'BOXEO' },
    { time: '12:00', activity: 'MMA' },
    { time: '13:00', activity: 'PERSONAL' },
    { time: '17:00', activity: 'INFANTIL' },
    { time: '18:00', activity: 'BOX.THAI' },
    { time: '19:00', activity: 'BOXEO' },
    { time: '20:00', activity: 'MMA' },
    { time: '21:00', activity: 'THAI' },
  ],
};

const activities = [...new Set(schedule.classes.map((c) => c.activity))];
---

<div class='schedule-container'>
  <h2>Horario de Clases</h2>
  <div class='filter-buttons'>
    <button class='filter-btn active' data-filter='all'>Todas</button>
    {
      activities.map((activity) => (
        <button class='filter-btn' data-filter={activity}>
          {activity}
        </button>
      ))
    }
  </div>

  <div class='schedule-grid'>
    <div class='header'></div>
    {schedule.days.map((day) => <div class='header day'>{day}</div>)}

    {
      schedule.times.map((time) => {
        const classForTime = schedule.classes.find((c) => c.time === time);
        return (
          <>
            <div class='header time'>{time}</div>
            {schedule.days.map((day) => (
              <div
                class={`class-cell ${classForTime ? classForTime.activity : ''}`}
                data-activity={classForTime ? classForTime.activity : ''}>
                {classForTime ? classForTime.activity : ''}
              </div>
            ))}
          </>
        );
      })
    }
  </div>
</div>

<style>
  .schedule-container {
    text-align: center;
    padding: 2rem;
    color: white;
  }
  .schedule-container h2 {
    font-size: 2.5rem;
    margin-bottom: 2rem;
  }
  .filter-buttons {
    margin-bottom: 2rem;
  }
  .filter-btn {
    background-color: #333;
    color: white;
    border: 1px solid #555;
    padding: 0.5rem 1rem;
    margin: 0.25rem;
    cursor: pointer;
    border-radius: 5px;
    transition: background-color 0.3s;
  }
  .filter-btn:hover,
  .filter-btn.active {
    background-color: #e50914;
    border-color: #e50914;
  }
  .schedule-grid {
    display: grid;
    grid-template-columns: 60px repeat(5, 1fr);
    gap: 5px;
    background-color: #141414;
    padding: 1rem;
    border-radius: 10px;
  }
  .header {
    background-color: #e50914;
    color: white;
    padding: 0.75rem;
    font-weight: bold;
    border-radius: 5px;
  }
  .day {
    text-align: center;
  }
  .time {
    text-align: center;
  }
  .class-cell {
    background-color: #222;
    padding: 1.5rem 0.5rem;
    border-radius: 5px;
    transition:
      opacity 0.3s ease-in-out,
      transform 0.2s;
    text-align: center;
    font-size: 0.9rem;
    font-weight: bold;
    min-height: 60px;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  .class-cell.hide {
    opacity: 0.1;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const filterButtons = document.querySelectorAll('.filter-btn');
    const classCells = document.querySelectorAll('.class-cell');

    filterButtons.forEach((button) => {
      button.addEventListener('click', () => {
        // Manage active button state
        filterButtons.forEach((btn) => btn.classList.remove('active'));
        button.classList.add('active');

        const filter = button.getAttribute('data-filter');

        classCells.forEach((cell) => {
          if (
            filter === 'all' ||
            cell.getAttribute('data-activity') === filter
          ) {
            cell.classList.remove('hide');
          } else {
            cell.classList.add('hide');
          }
        });
      });
    });
  });
</script>
